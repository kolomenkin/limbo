---
name: "Python version matrix"

on: # yamllint disable-line rule:truthy
  push:
    branches: [ master, develop, dev, release/** ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:

  check-code-style:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Check Markdown syntax (docker)
        shell: sh
        run: |
          make -- check-md
      -
        name: Check YAML syntax (docker)
        shell: sh
        run: |
          make -- check-yaml
      -
        name: Check Makefile syntax (docker)
        shell: sh
        run: |
          make -- check-make
      -
        name: Check Python syntax (PEP8) (docker)
        shell: sh
        run: |
          make -- check-pep8

  run-code-analysis:
    name: Run code analysis
    strategy:
      matrix:
        python_version: [ "3.7", "3.8" ]
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt
      -
        name: Install dependencies (pip)
        shell: sh
        run: |
          python -m pip install --upgrade -- pip
          pip install \
            --requirement=requirements.txt \
            --requirement=requirements.dev.txt
      -
        name: Run mypy
        shell: sh
        run: |
          make -- check-mypy
      -
        name: Run pylint
        shell: sh
        run: |
          make -- check-lint

  run-unit-tests:
    name: Run unit tests
    strategy:
      matrix:
        python_version: [ "3.7", "3.8" ]
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt
      -
        name: Install dependencies (pip)
        shell: sh
        run: |
          python -m pip install --upgrade -- pip
          pip install \
            --requirement=requirements.txt \
            --requirement=requirements.dev.txt
      -
        name: Run unit tests (pytest)
        shell: sh
        run: |
          PYTHONUNBUFFERED=1 make -- test

  run-speed-test:
    name: Run speed test
    strategy:
      matrix:
        python_version: [ "3.7", "3.8" ]
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v3
      -
        name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements.func.txt
      -
        name: Install dependencies (pip)
        shell: sh
        run: |
          python -m pip install --upgrade -- pip
          pip install \
            --requirement=requirements.txt \
            --requirement=requirements.func.txt
      -
        name: Run speed test
        shell: sh
        run: |
          PYTHONUNBUFFERED=1 make -- speedtest
